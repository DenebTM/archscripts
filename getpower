#!/usr/bin/python3
import os, os.path
import time, sys, traceback
from blessed import Terminal
t = Terminal()

# updates every 5 seconds by default
updateDelay = 5
i = sys.argv.index('-t') if '-t' in sys.argv else None
if i and len(sys.argv) > i:
    updateDelay = float(sys.argv[i+1])

# rows,columns = os.popen('stty size', 'r').read().split()

# relevant virtual files
powerpath = '/sys/class/power_supply/'
batpath = powerpath + 'BAT'
pathes = ['energy_full_design', 'energy_full', 'energy_now', 'power_now']
batts = [name for name in sorted(os.listdir(powerpath)) if name.startswith('BAT')]

def printW(pwr):
    if pwr < 10:
        print('  ', end='')
        print(str(pwr).ljust(4,'0').ljust(4), end=' W')
    elif pwr < 100:
        print(' ', end='')
        print(str(pwr).ljust(5,'0').ljust(5), end=' W')
    else:
        print(str(pwr).ljust(6,'0').ljust(6), end=' W')

def printAll():
    pwrvals = []
    totals = [0, 0, 0, 0]
    print('\n', end=t.clear_eos)
    for n, b in enumerate(batts):
        print(b+':')
        pwrvals.append([])
        for i, p in enumerate(pathes):
            file = open(powerpath+b + '/' + p, 'r')
            pwr = round(float(file.readline()) / 1000000, 2)
            pwrvals[n].append(pwr)
            totals[i] = round(totals[i] + pwrvals[n][i], 2)

            print((p+': ').ljust(30), end='') 
            if p == "energy_now":
                percentage = pwrvals[n][2] / pwrvals[n][1]
                if percentage < 0.25:
                    print(t.bright_red, end='')
                elif percentage < 0.8:
                    print(t.bright_yellow, end='')
                else:
                    print(t.bright_green, end='')
            printW(pwr)
            if p != "power_now": print('h')
            if p == "energy_now":
                print(t.normal, end='')

        print(('\n') * 2, end='')

    # total up all present batteries
    if len(batts) > 1:
        print('-'.ljust(39, '-'))
        print('\nTotal:')
        for i, p in enumerate(pathes):
            print((pathes[i]+': ').ljust(30), end='')
            if p == "energy_now":
                percentage = totals[2] / totals[1]
                if percentage < 0.25:
                    print(t.bright_red, end='')
                elif percentage < 0.8:
                    print(t.bright_yellow, end='')
                else:
                    print(t.bright_green, end='')
            printW(totals[i])
            if p != "power_now": print('h')
            if p == "energy_now":
                print(t.normal, end='')
        print()

    print()

def updateBatCount():
    global batts
    batts = [name for name in sorted(os.listdir(powerpath)) if name.startswith('BAT')]

try:
    if '--once' in sys.argv:
        printAll()
        sys.exit(0)
    else:
        while True:
            with t.hidden_cursor():
                with t.location():
                    printAll()
                time.sleep(updateDelay)
                updateBatCount()
except KeyboardInterrupt:
    sys.exit(0)
except Exception:
    traceback.print_exc(file=sys.stdout)
